<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>



	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:beans*.xml</param-value>
	</context-param>

	<!-- ServletContextListener :它也是在tomcat启动时就会运行, 加载spring提供的上下文监听器，这个监听器的作用就是我们在spring中写的new 
		ClassPathXmlApplacationContext("配置的文件名"); 这是用来加载spring的容器的，并做容器初始化（生成bean,装配bean） -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- <listener>
		<listener-class>com.yc.web.listeners.InitListener</listener-class>
	</listener> -->


	<!--配置Springmvc核心控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<!-- springmvc的前端分发qi -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- springmvc的配置文件，以加载spring容器：配置 控制器，视图 -->
		<!-- <init-param> <param-name>contextConfigLocation</param-name> <param-value>classpath*:beans*.xml</param-value> 
			</init-param> -->
		<!-- 表示服务器一起动就初始化 前端分发器 -->
		<load-on-startup>1</load-on-startup>
	</servlet>


	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>
